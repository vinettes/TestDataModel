<?xml version = '1.0' encoding = 'UTF-8'?>
<TriggerOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.TriggerOraclev10g" name="BUR_MERCHANT_ACCOUNTS" directorySegmentName="seg_0" id="DC6DAE53-A23F-D9A2-1C3D-192B231FEC13">
<sourceConnName>vinettes@FCNDEV.world</sourceConnName>
<sourceObjSchema>FALCON</sourceObjSchema>
<sourceObjName>BUR_MERCHANT_ACCOUNTS</sourceObjName>
<createdBy>vinettes</createdBy>
<createdTime>2014-08-20 18:32:33 UTC</createdTime>
<ownerDesignName>test</ownerDesignName>
<actions>UPDATE</actions>
<body>BEGIN&lt;br/&gt;declare&lt;br/&gt;   --LOGGER DECLARATIONS&lt;br/&gt;   LID       varchar2(50):= &apos;BUR_MERCHANT_ACCOUNTS&apos;;&lt;br/&gt;   LOG_MSG   VARCHAR2(1000);&lt;br/&gt;&lt;br/&gt;    /* JOURNALING SECTION */&lt;br/&gt;    v_dummy_active merchant_accounts_jn.active_flag%type;&lt;br/&gt;    v_dummy_mc merchant_accounts_jn.mecat_code%type ;&lt;br/&gt;    v_dummy_aacc merchant_accounts_jn.accoct_account_category_cde%type ;&lt;br/&gt;    v_dummy_crcps merchant_accounts_jn.crcps_state%type ;&lt;br/&gt;    v_dummy_firept merchant_accounts_jn.firept_cde%type ;&lt;br/&gt;    v_dummy_fraud merchant_accounts_jn.def_fraud_svcs%type ;&lt;br/&gt;    v_dummy_sbdih merchant_accounts_jn.sett_batch_delay_in_hours%type ;&lt;br/&gt;    v_dummy_ipaddr merchant_accounts_jn.ip_addresss%type ;&lt;br/&gt;    v_dummy_rre_behavior merchant_accounts_jn.rre_behavior_cde%type ;&lt;br/&gt;    v_dummy_auto_cb_dispute_ind merchant_accounts_jn.auto_cb_dispute_ind%type ;&lt;br/&gt;    &lt;br/&gt;   cursor c_get_old_row_af (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select active_flag&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and active_flag is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_mc (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select mecat_code&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and mecat_code is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_aacc (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select accoct_account_category_cde&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and accoct_account_category_cde is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_crcps (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select crcps_state&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and crcps_state is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_firept (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select firept_cde&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and firept_cde is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_fraud (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select def_fraud_svcs&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and def_fraud_svcs is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_sbdih (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select sett_batch_delay_in_hours&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and sett_batch_delay_in_hours is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_old_row_ipaddr (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select ip_addresss&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and ip_addresss is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_get_rre_behavior (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select rre_behavior_cde&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and rre_behavior_cde is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;   cursor c_auto_cb_dispute_ind (cp_account_id merchant_accounts_jn.account_id%type) is&lt;br/&gt;      select auto_cb_dispute_ind&lt;br/&gt;      from merchant_accounts_jn&lt;br/&gt;      where account_id = cp_account_id&lt;br/&gt;      and auto_cb_dispute_ind is not null&lt;br/&gt;      and thru_date is null&lt;br/&gt;      for update;&lt;br/&gt;&lt;br/&gt;    v_sysdate date := sysdate;&lt;br/&gt;    v_sysdate_minus_1_sec date;&lt;br/&gt;&lt;br/&gt;begin&lt;br/&gt;&lt;br/&gt;/*&lt;br/&gt;    Author: jfg&lt;br/&gt;    Date:    07-21-2004&lt;br/&gt;    Story:    1643&lt;br/&gt;&lt;br/&gt;Description:&lt;br/&gt;    The change involves the trigger that updates the Processing State when the Enabled Flag is updated automatically (i.e. Monthly Billing).&lt;br/&gt;    Currently, the requirement reads update to 多suspended多, but they want this changed to 多terminated多.&lt;br/&gt;*/&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;if (:new.active_flag != :old.active_flag) then&lt;br/&gt;   if (:new.active_flag = 1) then&lt;br/&gt;      :new.crcps_state := &apos;ENABLE&apos; ;&lt;br/&gt;   else&lt;br/&gt;      :new.crcps_state := nvl(:new.crcps_state,&apos;TERM&apos;) ;&lt;br/&gt;   end if ;&lt;br/&gt;end if ;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;/* audit section */&lt;br/&gt;:new.modification_date := sysdate;&lt;br/&gt;&lt;br/&gt;if not updating (&apos;modified_by&apos;) then&lt;br/&gt;    if (user != &apos;FALTXN&apos;) then&lt;br/&gt;      :new.modified_by := user ;&lt;br/&gt;    end if ;&lt;br/&gt;end if ;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;/*&lt;br/&gt; *   JOURNALING SECTION&lt;br/&gt; *&lt;br/&gt; *   PURPOSE: To keep an history of the merchant account active flag&lt;br/&gt; *&lt;br/&gt; *   EXCEPTIONS:  Name:&lt;br/&gt; *                Code:&lt;br/&gt; *                Desc:&lt;br/&gt; *&lt;br/&gt; *&lt;br/&gt; *   REVISIONS:&lt;br/&gt; *   Date           Author               Description&lt;br/&gt; *   ---------        ------                   ----------------------------------------&lt;br/&gt; *   30 Apr 03  Erik Mailhiot    1. Created&lt;br/&gt; *   28 Apr 04  Diane Arjoon   1. Updated code to include historic of MECAT_CODE and ACCOCT_ACCOUNT_CATEGORY_CDE fields&lt;br/&gt; *   06 May 04  Diane Arjoon  1. Added code for historic of CRCPS_STATE field&lt;br/&gt; *   06 Jan 06  Ioana D.      1. Added firept_cde column&lt;br/&gt; *   14 Jun 06  Diane Arjoon  1. Added code for historic of RULE_DISPLAY_IND field&lt;br/&gt; *   06 Nov 07  Erik Mailhiot   1. Added code for historic of DEF_FRAUD_SVCS field&lt;br/&gt; *                              2. Removed code for historic of RULE_DISPLAY_IND field&lt;br/&gt; *   18 Feb 10  Erik Mailhiot   1. Added journaling for new SETT_BATCH_DELAY_IN_HOURS column&lt;br/&gt; *   05 May 10  Anil Nair      1. Added journaling for IP_ADDRESSS column&lt;br/&gt; *   19 Apr 13  Erik Mailhiot   1. Added journaling for new RRE_BEHAVIOR_CDE column&lt;br/&gt; *   30 Jun 14  Jiac            1. Added journaling for PREVENT_OVERDRAFT&lt;br/&gt; *                               CVS info: $Id: BUR_MERCHANT_ACCOUNTS.SQL,v 1.12 2013/07/18 13:59:50 yeea Exp $&lt;br/&gt; *&lt;br/&gt; *   NOTES:&lt;br/&gt; *   - A list of columns is setup on this trigger under the following command:&lt;br/&gt; *     BEFORE UPDATE OF &lt;column 1&gt;, &lt;column 2&gt;, ... ON merchant_accounts&lt;br/&gt; */&lt;br/&gt;&lt;br/&gt;v_sysdate_minus_1_sec := v_sysdate - (interval &apos;1&apos; second);&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;If (:new.active_flag != :old.active_flag) then&lt;br/&gt;  open c_get_old_row_af(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_af into v_dummy_active;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_af%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        active_flag,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        :new.active_flag,&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_af;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        active_flag,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        :new.active_flag,&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_af;&lt;br/&gt;&lt;br/&gt;LOG_MSG := &apos;Merchant Account &apos;||:new.account_id||&apos; new status is &apos; ||:new.active_flag ;&lt;br/&gt;&lt;br/&gt; cmn_logger.info(cmn_logger.falcon, LID,&lt;br/&gt;                 NULL , LOG_MSG);&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.mecat_code,&apos;NULL&apos;) != nvl(:old.mecat_code,&apos;NULL&apos;)) then&lt;br/&gt;  open c_get_old_row_mc(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_mc into v_dummy_mc;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_mc%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        mecat_code,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.mecat_code,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_mc;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        mecat_code,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.mecat_code,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_mc;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.accoct_account_category_cde,&apos;NULL&apos;) != nvl(:old.accoct_account_category_cde,&apos;NULL&apos;)) then&lt;br/&gt;  open c_get_old_row_aacc(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_aacc into v_dummy_aacc;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_aacc%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        accoct_account_category_cde,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.accoct_account_category_cde,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_aacc;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        accoct_account_category_cde,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.accoct_account_category_cde,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_aacc;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.crcps_state,&apos;NULL&apos;) != nvl(:old.crcps_state,&apos;NULL&apos;)) then&lt;br/&gt;  open c_get_old_row_crcps(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_crcps into v_dummy_crcps;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_crcps%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        crcps_state,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.crcps_state,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_crcps;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        crcps_state,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.crcps_state,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_crcps;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.firept_cde,&apos;NULL&apos;) != nvl(:old.firept_cde,&apos;NULL&apos;)) then&lt;br/&gt;  open c_get_old_row_firept(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_firept into v_dummy_firept;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_firept%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        firept_cde,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.firept_cde,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_firept;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        firept_cde,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.firept_cde,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_firept;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.def_fraud_svcs,&apos;NULL&apos;) != nvl(:old.def_fraud_svcs,&apos;NULL&apos;)) then&lt;br/&gt;  open c_get_old_row_fraud(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_fraud into v_dummy_fraud;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_fraud%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        def_fraud_svcs,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.def_fraud_svcs,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_fraud;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        def_fraud_svcs,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.def_fraud_svcs,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_fraud;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.sett_batch_delay_in_hours,0) != nvl(:old.sett_batch_delay_in_hours,0)) then&lt;br/&gt;  open c_get_old_row_sbdih(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_sbdih into v_dummy_sbdih;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_sbdih%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        sett_batch_delay_in_hours,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.sett_batch_delay_in_hours,0),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_sbdih;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        sett_batch_delay_in_hours,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.sett_batch_delay_in_hours,0),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_sbdih;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.ip_addresss, &apos;NULL&apos;) != nvl(:old.ip_addresss, &apos;NULL&apos;)) then&lt;br/&gt;  open c_get_old_row_ipaddr(:new.account_id);&lt;br/&gt;  fetch c_get_old_row_ipaddr into v_dummy_ipaddr;&lt;br/&gt;&lt;br/&gt;  if (c_get_old_row_ipaddr%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        ip_addresss,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.ip_addresss, &apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_old_row_ipaddr;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        ip_addresss,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.ip_addresss, &apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_old_row_ipaddr;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.rre_behavior_cde,&apos;NULL&apos;) != nvl(:old.rre_behavior_cde,&apos;NULL&apos;)) then&lt;br/&gt;  open c_get_rre_behavior(:new.account_id);&lt;br/&gt;  fetch c_get_rre_behavior into v_dummy_rre_behavior;&lt;br/&gt;&lt;br/&gt;  if (c_get_rre_behavior%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        rre_behavior_cde,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.rre_behavior_cde,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_get_rre_behavior;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        rre_behavior_cde,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.rre_behavior_cde,&apos;NULL&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_get_rre_behavior;&lt;br/&gt;&lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;If (nvl(:new.auto_cb_dispute_ind,&apos;Y&apos;) != nvl(:old.auto_cb_dispute_ind,&apos;Y&apos;)) then&lt;br/&gt;  open c_auto_cb_dispute_ind(:new.account_id);&lt;br/&gt;  fetch c_auto_cb_dispute_ind into v_dummy_auto_cb_dispute_ind;&lt;br/&gt;&lt;br/&gt;  if (c_auto_cb_dispute_ind%found) then -- Old record exists for this entity.&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        auto_cb_dispute_ind,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.auto_cb_dispute_ind,&apos;Y&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;&lt;br/&gt;      /* Set the thru_date of the old record...&lt;br/&gt;       * only once the insert worked.&lt;br/&gt;       */&lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;      set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;      where current of c_auto_cb_dispute_ind;&lt;br/&gt;&lt;br/&gt;  else&lt;br/&gt;&lt;br/&gt;      insert into merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        auto_cb_dispute_ind,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        nvl(:new.auto_cb_dispute_ind,&apos;Y&apos;),&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;  end if;&lt;br/&gt;   close c_auto_cb_dispute_ind;&lt;br/&gt;   &lt;br/&gt;end if;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;   if :new.prevent_overdraft != :old.prevent_overdraft -- not null&lt;br/&gt;   then&lt;br/&gt;      &lt;br/&gt;      update merchant_accounts_jn&lt;br/&gt;         set thru_date = v_sysdate_minus_1_sec&lt;br/&gt;       where account_id = :new.account_id&lt;br/&gt;         and prevent_overdraft is not null&lt;br/&gt;         and thru_date is null;&lt;br/&gt;&lt;br/&gt;      insert into fcn_merchant_accounts_jn (&lt;br/&gt;        account_id,&lt;br/&gt;        prevent_overdraft,&lt;br/&gt;        mercaj_from_date,&lt;br/&gt;        modified_by&lt;br/&gt;      ) values (&lt;br/&gt;        :new.account_id,&lt;br/&gt;        :new.prevent_overdraft,&lt;br/&gt;        v_sysdate,&lt;br/&gt;        :new.modified_by&lt;br/&gt;      );&lt;br/&gt;      &lt;br/&gt;   end if;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;  /*&lt;br/&gt;   * Initializing visa txn monthly counts to 0 for Gaming merchants.&lt;br/&gt;   *&lt;br/&gt;   * User Story 1549 - Visa credit protection, 02 Dec 03, Erik Mailhiot&lt;br/&gt;   *&lt;br/&gt;   */&lt;br/&gt;  if :new.accoct_account_category_cde in (&apos;GA&apos;,&apos;PA&apos;) and :new.vi_sett_monthly_count is null then&lt;br/&gt;    :new.vi_sett_monthly_count := 0;&lt;br/&gt;    :new.vi_cred_monthly_count := 0;&lt;br/&gt;  end if;&lt;br/&gt;  &lt;br/&gt;  exception when others then&lt;br/&gt;        raise_application_error (-20001, &apos;bur_merchant_accounts trig, &apos; || SQLERRM);&lt;br/&gt;&lt;br/&gt;end;&lt;br/&gt;END BUR_MERCHANT_ACCOUNTS;</body>
<triggerTime>BEFORE</triggerTime>
<owner>A2F89220-3194-9EC7-59AE-89FF69B57C0E</owner>
<table>5F59B66D-C994-E44E-976E-F86FFEFE66CD</table>
</TriggerOraclev10g>