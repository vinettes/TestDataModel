<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="GET_MERCHANT_EMAIL" directorySegmentName="seg_0" id="5CB76E1F-0AEA-BAB6-6D31-F25C829FC4BB">
<sourceConnName>vinettes@FCNDEV.world</sourceConnName>
<sourceObjSchema>FALCON</sourceObjSchema>
<sourceObjName>GET_MERCHANT_EMAIL</sourceObjName>
<createdBy>vinettes</createdBy>
<createdTime>2014-08-20 18:32:35 UTC</createdTime>
<ownerDesignName>test</ownerDesignName>
<owner>A2F89220-3194-9EC7-59AE-89FF69B57C0E</owner>
<source>CREATE OR REPLACE PROCEDURE FALCON.GET_MERCHANT_EMAIL&lt;br/&gt;/*&lt;br/&gt; *  NAME:       get_merchant_email&lt;br/&gt; *&lt;br/&gt; *  PURPOSE:	Requirements: Merchants need to receive via a daily Email a list of FPA PANs that were BRBed during the&lt;br/&gt; *		  previous 24 hours that have had spending activity on their site.  This email will also&lt;br/&gt; *		  contain FPA PANs that were reinstated in the previous 24 hours that have had spending&lt;br/&gt; *		  activity on their site.&lt;br/&gt; *		.This procedure accept an input range date. It returns  3 result sets:&lt;br/&gt; *			1.all active merchants processing FPA and their email,&lt;br/&gt; *			2.all disabled pans that have spending at those merchants,&lt;br/&gt; *			3.all enabled pans that have spending at those merchants&lt;br/&gt; *			(these pans have been disabled/enabled during the input from and to date)&lt;br/&gt; *&lt;br/&gt; *  IN:&lt;br/&gt; *     		p_mod_from_date		date	-- modification from date&lt;br/&gt; *     		p_mod_to_date		date	-- modification to date&lt;br/&gt; *&lt;br/&gt; *  OUT: 	p_merchant_email	in out types.ref_cursor (account_id, email, account_name)&lt;br/&gt; *      	p_disabled_pan		in out types.ref_cursor&lt;br/&gt; *      	p_enabled_pan		in out types.ref_cursor&lt;br/&gt; *&lt;br/&gt; *  EXCEPTIONS:&lt;br/&gt; *&lt;br/&gt; *   Code:   Description:&lt;br/&gt; *&lt;br/&gt; *   20999,  Others - Oracle error.&lt;br/&gt; *&lt;br/&gt; *  REVISIONS:&lt;br/&gt; *  Date        Author  Description&lt;br/&gt; *  ----------  ------  ------------------------------------&lt;br/&gt; *  26-Jun-2002  DMa    1. Created.&lt;br/&gt; *&lt;br/&gt; *  NOTES:&lt;br/&gt; *&lt;br/&gt; *&lt;br/&gt; */&lt;br/&gt;(p_mod_from_date	in date&lt;br/&gt; ,p_mod_to_date		in date&lt;br/&gt; ,p_merchant_email	in out types.ref_cursor&lt;br/&gt; ,p_disabled_pan	in out types.ref_cursor&lt;br/&gt; ,p_enabled_pan		in out types.ref_cursor&lt;br/&gt;) is&lt;br/&gt;&lt;br/&gt;  v_prog    	               VARCHAR2(30) := &apos;get_merchant_email&apos;;&lt;br/&gt;  v_outMsg	               VARCHAR2(2000);&lt;br/&gt;&lt;br/&gt;begin&lt;br/&gt;	open p_merchant_email for&lt;br/&gt;	SELECT account_id, email, account_name&lt;br/&gt;	FROM fcn_merchant_accounts&lt;br/&gt;	WHERE active_flag = 1 AND account_id in&lt;br/&gt;		(select distinct merca_account_id&lt;br/&gt;		from fcn_processor_info_brands&lt;br/&gt;		where  proci_proc_code = &apos;FPY&apos;&lt;br/&gt;		AND    active_flag = 1)&lt;br/&gt;	order by account_id;&lt;br/&gt;&lt;br/&gt;        open p_disabled_pan for&lt;br/&gt;	SELECT distinct a.merca_account_id&lt;br/&gt;		,cc.decrypted_value disabled_cards&lt;br/&gt;		,cc.hash_value&lt;br/&gt;        FROM fpa_parties p, fpa_party_stats ps, fpa_credit_cards cc, fcn_authorizations a&lt;br/&gt;	WHERE	ps.partst_cde 		= &apos;DISABLED&apos;&lt;br/&gt;	  AND   ps.partsrt_cde		= &apos;SUPER_DIS&apos;&lt;br/&gt;	  AND   p.party_id		= ps.party_id&lt;br/&gt;	  AND   ps.thru_date		is null&lt;br/&gt;	  and   ps.modification_date    &gt;= p_mod_from_date&lt;br/&gt;	  and   ps.modification_date    &lt;= p_mod_to_date&lt;br/&gt;	  and   p.party_id		= cc.party_id&lt;br/&gt;	  and   cc.decrypted_value	&lt;&gt; &apos;UNKNOWN&apos;&lt;br/&gt;	  and	cc.hash_value		= a.payment_instrument_id&lt;br/&gt;	  and   a.procib_proci_proc_code = &apos;FPY&apos;&lt;br/&gt;	  and   a.procib_bran_code 	= &apos;FP&apos;&lt;br/&gt;	  and   exists (select 1 from fpa_transactions t&lt;br/&gt;			where cc.credit_card_id	= t.credit_card_id&lt;br/&gt;	  		and	t.tran_type	= &apos;AUTHP&apos;)&lt;br/&gt;	ORDER BY a.merca_account_id&lt;br/&gt;	  ;&lt;br/&gt;&lt;br/&gt;        open p_enabled_pan for&lt;br/&gt;	SELECT distinct  a.merca_account_id&lt;br/&gt;		,cc.decrypted_value enabled_cards&lt;br/&gt;		,cc.hash_value&lt;br/&gt;        FROM fpa_parties p, fpa_party_stats ps, fpa_credit_cards cc, fcn_authorizations a&lt;br/&gt;	WHERE	ps.partst_cde 		= &apos;ENABLED&apos;&lt;br/&gt;	  AND   ps.partsrt_cde		= &apos;SUPER_ENB&apos;&lt;br/&gt;	  AND   p.party_id		= ps.party_id&lt;br/&gt;	  AND   ps.thru_date		is null&lt;br/&gt;	  and   ps.modification_date    &gt;= p_mod_from_date&lt;br/&gt;	  and   ps.modification_date    &lt;= p_mod_to_date&lt;br/&gt;	  and   p.party_id		= cc.party_id&lt;br/&gt;	  and   cc.decrypted_value	&lt;&gt; &apos;UNKNOWN&apos;&lt;br/&gt;	  and	cc.hash_value		= a.payment_instrument_id&lt;br/&gt;	  and   a.procib_proci_proc_code = &apos;FPY&apos;&lt;br/&gt;	  and   a.procib_bran_code 	= &apos;FP&apos;&lt;br/&gt;	  and   exists (select 1 from fpa_transactions t&lt;br/&gt;			where cc.credit_card_id	= t.credit_card_id&lt;br/&gt;	  		and	t.tran_type	= &apos;AUTHP&apos;)&lt;br/&gt;	ORDER BY a.merca_account_id&lt;br/&gt;	  ;&lt;br/&gt;&lt;br/&gt;EXCEPTION&lt;br/&gt;&lt;br/&gt;  when others then&lt;br/&gt;      	v_outMsg  := v_prog || &apos; FAIL - UNEXPECTED ERROR processing &apos; ||&lt;br/&gt;                        &apos; error msg: &apos; || SQLERRM;&lt;br/&gt;      	dbms_output.put_line (v_outMsg);&lt;br/&gt;      	raise_application_error(-20999, v_outMsg);&lt;br/&gt;&lt;br/&gt;end get_merchant_email;</source>
<body>CREATE OR REPLACE PROCEDURE FALCON.GET_MERCHANT_EMAIL&lt;br/&gt;/*&lt;br/&gt; *  NAME:       get_merchant_email&lt;br/&gt; *&lt;br/&gt; *  PURPOSE:	Requirements: Merchants need to receive via a daily Email a list of FPA PANs that were BRBed during the&lt;br/&gt; *		  previous 24 hours that have had spending activity on their site.  This email will also&lt;br/&gt; *		  contain FPA PANs that were reinstated in the previous 24 hours that have had spending&lt;br/&gt; *		  activity on their site.&lt;br/&gt; *		.This procedure accept an input range date. It returns  3 result sets:&lt;br/&gt; *			1.all active merchants processing FPA and their email,&lt;br/&gt; *			2.all disabled pans that have spending at those merchants,&lt;br/&gt; *			3.all enabled pans that have spending at those merchants&lt;br/&gt; *			(these pans have been disabled/enabled during the input from and to date)&lt;br/&gt; *&lt;br/&gt; *  IN:&lt;br/&gt; *     		p_mod_from_date		date	-- modification from date&lt;br/&gt; *     		p_mod_to_date		date	-- modification to date&lt;br/&gt; *&lt;br/&gt; *  OUT: 	p_merchant_email	in out types.ref_cursor (account_id, email, account_name)&lt;br/&gt; *      	p_disabled_pan		in out types.ref_cursor&lt;br/&gt; *      	p_enabled_pan		in out types.ref_cursor&lt;br/&gt; *&lt;br/&gt; *  EXCEPTIONS:&lt;br/&gt; *&lt;br/&gt; *   Code:   Description:&lt;br/&gt; *&lt;br/&gt; *   20999,  Others - Oracle error.&lt;br/&gt; *&lt;br/&gt; *  REVISIONS:&lt;br/&gt; *  Date        Author  Description&lt;br/&gt; *  ----------  ------  ------------------------------------&lt;br/&gt; *  26-Jun-2002  DMa    1. Created.&lt;br/&gt; *&lt;br/&gt; *  NOTES:&lt;br/&gt; *&lt;br/&gt; *&lt;br/&gt; */&lt;br/&gt;(p_mod_from_date	in date&lt;br/&gt; ,p_mod_to_date		in date&lt;br/&gt; ,p_merchant_email	in out types.ref_cursor&lt;br/&gt; ,p_disabled_pan	in out types.ref_cursor&lt;br/&gt; ,p_enabled_pan		in out types.ref_cursor&lt;br/&gt;) is&lt;br/&gt;&lt;br/&gt;  v_prog    	               VARCHAR2(30) := &apos;get_merchant_email&apos;;&lt;br/&gt;  v_outMsg	               VARCHAR2(2000);&lt;br/&gt;&lt;br/&gt;begin&lt;br/&gt;	open p_merchant_email for&lt;br/&gt;	SELECT account_id, email, account_name&lt;br/&gt;	FROM fcn_merchant_accounts&lt;br/&gt;	WHERE active_flag = 1 AND account_id in&lt;br/&gt;		(select distinct merca_account_id&lt;br/&gt;		from fcn_processor_info_brands&lt;br/&gt;		where  proci_proc_code = &apos;FPY&apos;&lt;br/&gt;		AND    active_flag = 1)&lt;br/&gt;	order by account_id;&lt;br/&gt;&lt;br/&gt;        open p_disabled_pan for&lt;br/&gt;	SELECT distinct a.merca_account_id&lt;br/&gt;		,cc.decrypted_value disabled_cards&lt;br/&gt;		,cc.hash_value&lt;br/&gt;        FROM fpa_parties p, fpa_party_stats ps, fpa_credit_cards cc, fcn_authorizations a&lt;br/&gt;	WHERE	ps.partst_cde 		= &apos;DISABLED&apos;&lt;br/&gt;	  AND   ps.partsrt_cde		= &apos;SUPER_DIS&apos;&lt;br/&gt;	  AND   p.party_id		= ps.party_id&lt;br/&gt;	  AND   ps.thru_date		is null&lt;br/&gt;	  and   ps.modification_date    &gt;= p_mod_from_date&lt;br/&gt;	  and   ps.modification_date    &lt;= p_mod_to_date&lt;br/&gt;	  and   p.party_id		= cc.party_id&lt;br/&gt;	  and   cc.decrypted_value	&lt;&gt; &apos;UNKNOWN&apos;&lt;br/&gt;	  and	cc.hash_value		= a.payment_instrument_id&lt;br/&gt;	  and   a.procib_proci_proc_code = &apos;FPY&apos;&lt;br/&gt;	  and   a.procib_bran_code 	= &apos;FP&apos;&lt;br/&gt;	  and   exists (select 1 from fpa_transactions t&lt;br/&gt;			where cc.credit_card_id	= t.credit_card_id&lt;br/&gt;	  		and	t.tran_type	= &apos;AUTHP&apos;)&lt;br/&gt;	ORDER BY a.merca_account_id&lt;br/&gt;	  ;&lt;br/&gt;&lt;br/&gt;        open p_enabled_pan for&lt;br/&gt;	SELECT distinct  a.merca_account_id&lt;br/&gt;		,cc.decrypted_value enabled_cards&lt;br/&gt;		,cc.hash_value&lt;br/&gt;        FROM fpa_parties p, fpa_party_stats ps, fpa_credit_cards cc, fcn_authorizations a&lt;br/&gt;	WHERE	ps.partst_cde 		= &apos;ENABLED&apos;&lt;br/&gt;	  AND   ps.partsrt_cde		= &apos;SUPER_ENB&apos;&lt;br/&gt;	  AND   p.party_id		= ps.party_id&lt;br/&gt;	  AND   ps.thru_date		is null&lt;br/&gt;	  and   ps.modification_date    &gt;= p_mod_from_date&lt;br/&gt;	  and   ps.modification_date    &lt;= p_mod_to_date&lt;br/&gt;	  and   p.party_id		= cc.party_id&lt;br/&gt;	  and   cc.decrypted_value	&lt;&gt; &apos;UNKNOWN&apos;&lt;br/&gt;	  and	cc.hash_value		= a.payment_instrument_id&lt;br/&gt;	  and   a.procib_proci_proc_code = &apos;FPY&apos;&lt;br/&gt;	  and   a.procib_bran_code 	= &apos;FP&apos;&lt;br/&gt;	  and   exists (select 1 from fpa_transactions t&lt;br/&gt;			where cc.credit_card_id	= t.credit_card_id&lt;br/&gt;	  		and	t.tran_type	= &apos;AUTHP&apos;)&lt;br/&gt;	ORDER BY a.merca_account_id&lt;br/&gt;	  ;&lt;br/&gt;&lt;br/&gt;EXCEPTION&lt;br/&gt;&lt;br/&gt;  when others then&lt;br/&gt;      	v_outMsg  := v_prog || &apos; FAIL - UNEXPECTED ERROR processing &apos; ||&lt;br/&gt;                        &apos; error msg: &apos; || SQLERRM;&lt;br/&gt;      	dbms_output.put_line (v_outMsg);&lt;br/&gt;      	raise_application_error(-20999, v_outMsg);&lt;br/&gt;&lt;br/&gt;end get_merchant_email;</body>
</StoredProcedureOraclev10g>